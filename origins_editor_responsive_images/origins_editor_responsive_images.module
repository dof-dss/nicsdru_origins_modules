<?php

/**
 * @file
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_FORM_ID_alter() for EditorImageDialog.
 *
 * Alters the entity embed dialog form for text editor,
 * to allow the user to select a responsive image style.
 *
 * @see \Drupal\editor\Form\EditorImageDialog::buildForm()
 */
function origins_editor_responsive_images_form_entity_embed_dialog_alter(&$form, FormStateInterface $form_state) {

  if ($form['#title']->jsonSerialize() != 'Embed media') {
    return;
  }

  $editor = $form_state->getBuildInfo()['args'][0];
  $filter_format = $editor->getFilterFormat();
  $filters = $filter_format->filters()->getAll();

  $image_element = $form_state->getStorage()['image_element'];

  // When responsive image functionality is available, disallow the user from
  // specifying the dimensions manually, and from selecting an image style, only
  // allowing a responsive image style to be selected.
  if (isset($filters['filter_responsive_image_style']) && $filters['filter_responsive_image_style']->status) {

    // Hide the default width/height form items.
    $form['dimensions']['#access'] = FALSE;

    $form['#attached']['library'][] = 'origins_editor_responsive_images/responsive.css';

    $form['responsive_image_style'] = [
      '#type' => 'item',
    ];
    $responsive_image_options = [];
    $responsive_image_styles = \Drupal::entityTypeManager()->getStorage('responsive_image_style')->loadMultiple();

    if ($responsive_image_styles && !empty($responsive_image_styles)) {
      foreach ($responsive_image_styles as $responsive_image_style_id => $responsive_image_style) {
        if ($responsive_image_style->hasImageStyleMappings()) {
          if ($filters['filter_responsive_image_style']->settings['responsive_style_' . $responsive_image_style_id]) {
            $responsive_image_options[$responsive_image_style_id] = $responsive_image_style->label();
          }
        }
      }
    }

    $form['responsive_image_style']['selection'] = [
      '#title' => t('Responsive image style'),
      '#type' => 'select',
      '#default_value' => isset($image_element['data-responsive-image-style']) ? $image_element['data-responsive-image-style'] : key($responsive_image_options),
      '#options' => $responsive_image_options,
      '#required' => TRUE,
      '#wrapper_attributes' => ['class' => ['container-inline']],
      '#attributes' => ['class' => ['container-inline']],
      '#parents' => ['attributes', 'data-responsive-image-style'],
    ];

    $form['responsive_image_style']['selection'] = [
      '#title' => t('Responsive image style'),
      '#type' => 'select',
      '#default_value' => isset($image_element['data-responsive-image-style']) ? $image_element['data-responsive-image-style'] : key($responsive_image_options),
      '#options' => $responsive_image_options,
      '#required' => TRUE,
      '#wrapper_attributes' => ['class' => ['container-inline']],
      '#attributes' => ['class' => ['container-inline']],
      '#parents' => ['attributes', 'data-responsive-image-style'],
    ];
    $form['responsive_image_style']['preview_toggle'] = [
      '#type' => 'checkbox',
      '#title' => t('Show preview'),
    ];
    foreach ($responsive_image_styles as $responsive_image_style_id => $responsive_image_style) {
      if ($responsive_image_style->hasImageStyleMappings()) {
        $form['responsive_image_style']['preview_' . $responsive_image_style_id] = [
          '#type' => 'fieldset',
          '#title' => t('Preview of %responsive-image-style responsive image style', ['%responsive-image-style' => $responsive_image_style->label()]),
          '#states' => [
            'visible' => [
              ':input[name="responsive_image_style[preview_toggle]"]' => ['checked' => TRUE],
              ':input[name="attributes[data-responsive-image-style]"]' => ['value' => $responsive_image_style_id],
            ],
          ],
        ];

        $preview_arguments = [
          '#theme' => 'responsive_image',
          '#uri' => \Drupal::config('image.settings')->get('preview_image'),
          '#responsive_image_style_id' => $responsive_image_style_id,
        ];
        $form['responsive_image_style']['preview_' . $responsive_image_style_id] = [
          '#type' => 'item',
          '#markup' => \Drupal::service('renderer')->render($preview_arguments),
          '#states' => [
            'visible' => [
              ':input[name="responsive_image_style[preview_toggle]"]' => ['checked' => TRUE],
              ':input[name="attributes[data-responsive-image-style]"]' => ['value' => $responsive_image_style_id],
            ],
          ],
        ];
      }
    }
  }
}
